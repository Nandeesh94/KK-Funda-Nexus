How to create a repository?

login as a admin --> settings --> create repository --> maven2(hosted)--> give name as jio-snapshot -->
select version policy [snapshot] --> scroll down ---> create repository. 


login as a admin --> settings --> create repository --> maven2(hosted)--> give name as jio-release -->
select version policy [release] --> scroll down ---> create repository. 


NOTE: For each project we are going to create two types of repositories.

      1. jio-snapshot
      2. jio-release

NOTE: Each repository we have separate URL
  
    http://3.108.40.37:8081/repository/jio-release/
    http://3.108.40.37:8081/repository/jio-snapshot/



===================================================================================================
Step-by-step: Create settings.xml with your credentials
Create the file:
mkdir -p /root/.m2
vi /root/.m2/settings.xml

Paste this content into the file:
<settings>
  <servers>
    <server>
      <id>airtel-releases</id>
      <username>admin</username>
      <password>90199652</password>
    </server>
    <server>
      <id>airtel-snapshots</id>
      <username>admin</username>
      <password>90199652</password>
    </server>
  </servers>
</settings>

Save and exit (:wq)
üöÄ Deploy again:
c: mvn clean deploy



==================================================================================================
Create a Custom Maven Repository in Nexus
‚úÖ Step-by-step to create a hosted snapshot or release repo
Log into Nexus UI

In the left sidebar, click:
Administration ‚Üí Repositories
Click the ‚ÄúCreate repository‚Äù button (top-right).
Choose:
Recipe: maven2 (hosted)
Fill in the form:
---------------------------------------------------
Click Create repository.
üîß Update your pom.xml to use the new repo:

<distributionManagement>
  <repository>
    <id>airtel-releases</id>
    <url>http://<your-nexus-ip>:8081/repository/airtel-releases/</url>
  </repository>
  <snapshotRepository>
    <id>airtel-snapshots</id>
    <url>http://<your-nexus-ip>:8081/repository/airtel-snapshots/</url>
  </snapshotRepository>
</distributionManagement>

----------------------------------------------------------


-------------------------------------------------------

Click the ‚ÄúCreate repository‚Äù button (top-right).
Here‚Äôs how to configure a hosted Maven release repository:
   
Releases Repository creations:

Field	Value
Name	                : airtel-releases (or any unique name)
Online	          : ‚úÖ (checked)
Recipe	          : maven2 (hosted)
Version Policy	    : Release
Layout Policy	    : Strict (recommended)
Content-Disposition   :	Inline (default is fine)
Blob Store	          : default (unless you‚Äôve created a custom one)
Deployment Policy	    : Allow Redeploy (or just Allow if you want to prevent overwriting)


Snapshot repository creations:

Field	Value
Name	                : airtel-snapshots
Online	          : ‚úÖ (checked)
Recipe	          : maven2 (hosted)
Version Policy	    : Snapshot
Layout Policy	    : Strict (recommended)
Content-Disposition   :	Inline (default is fine)
Blob Store	          : default (unless you‚Äôve created a custom one)
Deployment Policy	    : Allow Redeploy (or just Allow if you want to prevent overwriting)
Same steps, but change:



========================================================================================================



How to integrate nexus with maven?
==================================

step 1: connect to maven server, Where java projects are available

step 2: where to keep our repository details?

update the details in pom.xml

          <distributionManagement>

            <repository>
              <id>nexus</id>
              <name>KK FUNDA Releases Nexus Repository</name>
              <url>http://13.235.244.97:9676/repository/jio-release/</url>
            </repository>

            <snapshotRepository>
              <id>nexus</id>
              <name>KK FUNDA Snapshot Nexus Repository </name>
              <url>http://13.235.244.97:9676/repository/jio-snapshot/</url>
            </snapshotRepository>

        </distributionManagement>

step 3: Where we need to keep nexus credentials?

--> In SonarQube we updated credentials in pom.xml
--> In nexus, repo details in pom.xml and credentials in /opt/apache-maven-3.9.10/conf/settings.xml

   <server>
      <id>nexus</id>
      <username>admin</username>
      <password>password</password>
    </server>


==============================================================================================



IQ] How to deploy antifactory into nexus?

step 1: go to project directory , Where the pom.xml is available.

step 2: mvn clean deploy

NOTE: if you execute "mvn clean deploy" multiple times , Each time it will upload war file into "nexus snapshot repository"


====================================================================================================




IQ] why it is always uploading into snapshot repo, why not release repo?

ANS: In pom.xml <version> tag we defined "SNAPSHOT" , If you remove that tag then it will store in the release repo.

add  <version>1.0.0</version>


NOTE: one version, you can create only once, If you are tying to deploy again without changing the version, you will get bad request error (400)

   mvn clean deploy ----> Build will fail.


settings ---> select repo --> policy --> allow redeploy ---> save


again disable the redeploy


  mvn clean deploy





====================================================================================================



IQ] what is the difference between snapshot and release ?

SNAPSHOT: used in continuous deployment.
Release : Before deploy into production.

IQ] How to store artifacts into maven local repository?

   mvn clean install

IQ] How to store artifacts into maven remote repository?

  mvn clean deploy


=====================================================================================================



Requirement : release 1.0.0 has some bugs, I want to redeploy the artifact with the same version.

sol:  settings --> repository --> jio-release --> scroll down --> Hosted --> allow redeploy --> save


Then mvn clean deploy ---> It will redeploy.



===================================================================================================
